"""
# 예산
국가의 역할 중 하나는 여러 지방의 예산요청을 심사하여 국가의 예산을 분배하는 것이다.
국가예산의 총액은 미리 정해져 있어서 모든 예산요청을 배정해 주기는 어려울 수도 있다.
그래서 정해진 총액 이하에서 가능한 한 최대의 총 예산을 다음과 같은 방법으로 배정한다.

1. 모든 요청이 배정될 수 있는 경우에는 요청한 금액을 그대로 배정한다.
2. 모든 요청이 배정될 수 없는 경우에는 특정한 정수 상한액을 계산하여 그 이상인 예산요청에는 모두 상한액을 배정한다.
상한액 이하의 예산요청에 대해서는 요청한 금액을 그대로 배정한다.

예를 들어, 전체 국가예산이 485이고 4개 지방의 예산요청이 각각 120, 110, 140, 150이라고 하자.
이 경우, 상한액을 127로 잡으면, 위의 요청들에 대해서 각각 120, 110, 127, 127을 배정하고 그 합이 484로 가능한 최대가 된다.

여러 지방의 예산요청과 국가예산의 총액이 주어졌을 때, 위의 조건을 모두 만족하도록 예산을 배정하는 프로그램을 작성하시오.

# 입력
첫째 줄에는 지방의 수를 의미하는 정수 N이 주어진다.
N은 3 이상 10,000 이하이다. 다음 줄에는 각 지방의 예산요청을 표현하는 N개의 정수가 빈칸을 사이에 두고 주어진다.
이 값들은 모두 1 이상 100,000 이하이다. 그 다음 줄에는 총 예산을 나타내는 정수 M이 주어진다. M은 N 이상 1,000,000,000 이하이다.
"""
N = int(input())
budgets = list(map(int, input().split()))
budgets.sort()
maximum = int(input())

if sum(budgets) <= maximum:
    print(max(budgets))
else:
    # 가능한 최대 예산 찾기
    total = maximum
    available = 0
    for i in range(N):
        divided = total / (N - i)
        available = divided if divided > available else available
        total -= budgets[i]

    print(int(available))
exit()
"""
5
80 100 110 130 150
500

4
120 80 70 90
120

5
70 90 100 130 150
500

4
101 101 101 101
400 

5
100 100 100 100 100
10

7
10 220 100 100 100 120 100
700

115, 118, 122, 130, 145

5
70 80 30 40 100
450

3
100 100 100
300

121.5
125

"""

# 풀이
# 파라메트릭 서치로
# 총 예산 값에서 이분탐색을 하면서 맞는 예산을 찾는다.
"""
예제 입력 1
4
120 110 140 150
485
탐색 1. 485를 2로 나눈 242로 각 예산을 쓸 수 있는지 확인 후 예산이 초과하면 미만에서, 예산이 남으면 이상에서 탐색
탐색 2. 242를 2로 나눈 121로 예산 확인 후 반복
탐색 반복 ...

예산 확인법 나눠진 예산보다 작으면 그대로 더하고, 크면 나눠진 예산으로 총 합을 구해서 국가예산보다 작은 값을 찾음
"""
N = int(input())
req = list(map(int, input().split()))
M = int(input())

lo = 0
hi = max(req)
# 이분법
mid = (lo + hi) // 2
ans = 0


# 파라메트릭 서치
def is_possible(mid):
    return sum(min(r, mid) for r in req) <= M


while lo <= hi:
    print(f'lo: {lo}, mid: {mid}, hi: {hi}, ans: {ans}')
    if is_possible(mid):
        lo = mid + 1
        ans = mid
    else:
        hi = mid - 1
    mid = (lo + hi) // 2
print(ans)
exit()